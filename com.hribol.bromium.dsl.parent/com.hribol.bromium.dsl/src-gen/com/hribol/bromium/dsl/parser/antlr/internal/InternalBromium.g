/*
 * generated by Xtext 2.12.0
 */
grammar InternalBromium;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.hribol.bromium.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.hribol.bromium.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.hribol.bromium.dsl.services.BromiumGrammarAccess;

}

@parser::members {

 	private BromiumGrammarAccess grammarAccess;

    public InternalBromiumParser(TokenStream input, BromiumGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BromiumGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='version'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getVersionKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getVersionVersionParserRuleCall_3_0());
				}
				lv_version_3_0=ruleVersion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"version",
						lv_version_3_0,
						"com.hribol.bromium.dsl.Bromium.Version");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='from'
			{
				newLeafNode(otherlv_4, grammarAccess.getModelAccess().getFromKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getBaseVersionVersionParserRuleCall_4_1_0());
					}
					lv_baseVersion_5_0=ruleVersion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"baseVersion",
							lv_baseVersion_5_0,
							"com.hribol.bromium.dsl.Bromium.Version");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='actions'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getActionsKeyword_5());
		}
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getActionsApplicationActionParserRuleCall_7_0());
				}
				lv_actions_8_0=ruleApplicationAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"actions",
						lv_actions_8_0,
						"com.hribol.bromium.dsl.Bromium.ApplicationAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleApplicationAction
entryRuleApplicationAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationActionRule()); }
	iv_ruleApplicationAction=ruleApplicationAction
	{ $current=$iv_ruleApplicationAction.current; }
	EOF;

// Rule ApplicationAction
ruleApplicationAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='action'
		{
			newLeafNode(otherlv_0, grammarAccess.getApplicationActionAccess().getActionKeyword_0());
		}
		(
			(
				lv_actionId_1_0=RULE_STRING
				{
					newLeafNode(lv_actionId_1_0, grammarAccess.getApplicationActionAccess().getActionIdSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getApplicationActionRule());
					}
					setWithLastConsumed(
						$current,
						"actionId",
						lv_actionId_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2='when'
			{
				newLeafNode(otherlv_2, grammarAccess.getApplicationActionAccess().getWhenKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicationActionAccess().getPreconditionWebDriverActionParserRuleCall_2_1_0());
					}
					lv_precondition_3_0=ruleWebDriverAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicationActionRule());
						}
						set(
							$current,
							"precondition",
							lv_precondition_3_0,
							"com.hribol.bromium.dsl.Bromium.WebDriverAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationActionAccess().getWebDriverActionWebDriverActionParserRuleCall_3_0());
				}
				lv_webDriverAction_4_0=ruleWebDriverAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationActionRule());
					}
					set(
						$current,
						"webDriverAction",
						lv_webDriverAction_4_0,
						"com.hribol.bromium.dsl.Bromium.WebDriverAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='then'
			{
				newLeafNode(otherlv_5, grammarAccess.getApplicationActionAccess().getThenKeyword_4_0());
			}
			otherlv_6='make'
			{
				newLeafNode(otherlv_6, grammarAccess.getApplicationActionAccess().getMakeKeyword_4_1());
			}
			otherlv_7='sure'
			{
				newLeafNode(otherlv_7, grammarAccess.getApplicationActionAccess().getSureKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicationActionAccess().getPostconditionWebDriverActionParserRuleCall_4_3_0());
					}
					lv_postcondition_8_0=ruleWebDriverAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicationActionRule());
						}
						set(
							$current,
							"postcondition",
							lv_postcondition_8_0,
							"com.hribol.bromium.dsl.Bromium.WebDriverAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='do'
			{
				newLeafNode(otherlv_9, grammarAccess.getApplicationActionAccess().getDoKeyword_5_0());
			}
			(
				otherlv_10='not'
				{
					newLeafNode(otherlv_10, grammarAccess.getApplicationActionAccess().getNotKeyword_5_1());
				}
			)?
			otherlv_11='expect'
			{
				newLeafNode(otherlv_11, grammarAccess.getApplicationActionAccess().getExpectKeyword_5_2());
			}
			otherlv_12='http'
			{
				newLeafNode(otherlv_12, grammarAccess.getApplicationActionAccess().getHttpKeyword_5_3());
			}
			otherlv_13='request'
			{
				newLeafNode(otherlv_13, grammarAccess.getApplicationActionAccess().getRequestKeyword_5_4());
			}
		)?
	)
;

// Entry rule entryRuleWebDriverAction
entryRuleWebDriverAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWebDriverActionRule()); }
	iv_ruleWebDriverAction=ruleWebDriverAction
	{ $current=$iv_ruleWebDriverAction.current; }
	EOF;

// Rule WebDriverAction
ruleWebDriverAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getWebDriverActionAccess().getElementWithIdIsPresentParserRuleCall_0());
		}
		this_ElementWithIdIsPresent_0=ruleElementWithIdIsPresent
		{
			$current = $this_ElementWithIdIsPresent_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebDriverActionAccess().getClickOnElementWithIdParserRuleCall_1());
		}
		this_ClickOnElementWithId_1=ruleClickOnElementWithId
		{
			$current = $this_ClickOnElementWithId_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebDriverActionAccess().getPageLoadParserRuleCall_2());
		}
		this_PageLoad_2=rulePageLoad
		{
			$current = $this_PageLoad_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWebDriverActionAccess().getTypeTextInElementFoundByCssSelectorParserRuleCall_3());
		}
		this_TypeTextInElementFoundByCssSelector_3=ruleTypeTextInElementFoundByCssSelector
		{
			$current = $this_TypeTextInElementFoundByCssSelector_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleElementWithIdIsPresent
entryRuleElementWithIdIsPresent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementWithIdIsPresentRule()); }
	iv_ruleElementWithIdIsPresent=ruleElementWithIdIsPresent
	{ $current=$iv_ruleElementWithIdIsPresent.current; }
	EOF;

// Rule ElementWithIdIsPresent
ruleElementWithIdIsPresent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='element'
		{
			newLeafNode(otherlv_0, grammarAccess.getElementWithIdIsPresentAccess().getElementKeyword_0());
		}
		otherlv_1='with'
		{
			newLeafNode(otherlv_1, grammarAccess.getElementWithIdIsPresentAccess().getWithKeyword_1());
		}
		otherlv_2='css'
		{
			newLeafNode(otherlv_2, grammarAccess.getElementWithIdIsPresentAccess().getCssKeyword_2());
		}
		otherlv_3='selector'
		{
			newLeafNode(otherlv_3, grammarAccess.getElementWithIdIsPresentAccess().getSelectorKeyword_3());
		}
		(
			(
				lv_cssSelector_4_0=RULE_STRING
				{
					newLeafNode(lv_cssSelector_4_0, grammarAccess.getElementWithIdIsPresentAccess().getCssSelectorSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementWithIdIsPresentRule());
					}
					setWithLastConsumed(
						$current,
						"cssSelector",
						lv_cssSelector_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='is'
		{
			newLeafNode(otherlv_5, grammarAccess.getElementWithIdIsPresentAccess().getIsKeyword_5());
		}
		otherlv_6='clickable'
		{
			newLeafNode(otherlv_6, grammarAccess.getElementWithIdIsPresentAccess().getClickableKeyword_6());
		}
	)
;

// Entry rule entryRuleClickOnElementWithId
entryRuleClickOnElementWithId returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickOnElementWithIdRule()); }
	iv_ruleClickOnElementWithId=ruleClickOnElementWithId
	{ $current=$iv_ruleClickOnElementWithId.current; }
	EOF;

// Rule ClickOnElementWithId
ruleClickOnElementWithId returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='click'
		{
			newLeafNode(otherlv_0, grammarAccess.getClickOnElementWithIdAccess().getClickKeyword_0());
		}
		otherlv_1='on'
		{
			newLeafNode(otherlv_1, grammarAccess.getClickOnElementWithIdAccess().getOnKeyword_1());
		}
		otherlv_2='element'
		{
			newLeafNode(otherlv_2, grammarAccess.getClickOnElementWithIdAccess().getElementKeyword_2());
		}
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getClickOnElementWithIdAccess().getWithKeyword_3());
		}
		otherlv_4='css'
		{
			newLeafNode(otherlv_4, grammarAccess.getClickOnElementWithIdAccess().getCssKeyword_4());
		}
		otherlv_5='selector'
		{
			newLeafNode(otherlv_5, grammarAccess.getClickOnElementWithIdAccess().getSelectorKeyword_5());
		}
		(
			(
				lv_cssSelector_6_0=RULE_STRING
				{
					newLeafNode(lv_cssSelector_6_0, grammarAccess.getClickOnElementWithIdAccess().getCssSelectorSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClickOnElementWithIdRule());
					}
					setWithLastConsumed(
						$current,
						"cssSelector",
						lv_cssSelector_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulePageLoad
entryRulePageLoad returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPageLoadRule()); }
	iv_rulePageLoad=rulePageLoad
	{ $current=$iv_rulePageLoad.current; }
	EOF;

// Rule PageLoad
rulePageLoad returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='load'
		{
			newLeafNode(otherlv_0, grammarAccess.getPageLoadAccess().getLoadKeyword_0());
		}
		otherlv_1='page'
		{
			newLeafNode(otherlv_1, grammarAccess.getPageLoadAccess().getPageKeyword_1());
		}
		(
			(
				lv_subpath_2_0=RULE_STRING
				{
					newLeafNode(lv_subpath_2_0, grammarAccess.getPageLoadAccess().getSubpathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPageLoadRule());
					}
					setWithLastConsumed(
						$current,
						"subpath",
						lv_subpath_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTypeTextInElementFoundByCssSelector
entryRuleTypeTextInElementFoundByCssSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeTextInElementFoundByCssSelectorRule()); }
	iv_ruleTypeTextInElementFoundByCssSelector=ruleTypeTextInElementFoundByCssSelector
	{ $current=$iv_ruleTypeTextInElementFoundByCssSelector.current; }
	EOF;

// Rule TypeTextInElementFoundByCssSelector
ruleTypeTextInElementFoundByCssSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='type'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeTextInElementFoundByCssSelectorAccess().getTypeKeyword_0());
		}
		(
			(
				lv_text_1_0=RULE_STRING
				{
					newLeafNode(lv_text_1_0, grammarAccess.getTypeTextInElementFoundByCssSelectorAccess().getTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeTextInElementFoundByCssSelectorRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeTextInElementFoundByCssSelectorAccess().getInKeyword_2());
		}
		otherlv_3='element'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeTextInElementFoundByCssSelectorAccess().getElementKeyword_3());
		}
		otherlv_4='with'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeTextInElementFoundByCssSelectorAccess().getWithKeyword_4());
		}
		otherlv_5='css'
		{
			newLeafNode(otherlv_5, grammarAccess.getTypeTextInElementFoundByCssSelectorAccess().getCssKeyword_5());
		}
		otherlv_6='selector'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeTextInElementFoundByCssSelectorAccess().getSelectorKeyword_6());
		}
		(
			(
				lv_cssSelector_7_0=RULE_STRING
				{
					newLeafNode(lv_cssSelector_7_0, grammarAccess.getTypeTextInElementFoundByCssSelectorAccess().getCssSelectorSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeTextInElementFoundByCssSelectorRule());
					}
					setWithLastConsumed(
						$current,
						"cssSelector",
						lv_cssSelector_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleVersion
entryRuleVersion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	iv_ruleVersion=ruleVersion
	{ $current=$iv_ruleVersion.current.getText(); }
	EOF;

// Rule Version
ruleVersion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getVersionAccess().getSTRINGTerminalRuleCall());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
